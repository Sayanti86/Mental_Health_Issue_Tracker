dbDisconnect(con,flights.db)
dbListTables(con,flights.db)
con <- dbConnect(RSQLite::SQLite(), dbname="flights.db")
dbListTables(con,flights.db)
flights_2008 <- dbReadTable(con, "flights")
flights_csv <-tbl(con,"flights")
flights_2008 <- dbReadTable(con, "flights")
head(flights_2008)
dbListTables(con)
dbDisconnect(con,flights.db)
con <- dbConnect(RSQLite::SQLite(), dbname="flights.db")
library(DBI)
con <- dbConnect(RSQLite::SQLite(), dbname="flights.db")
dbListTables(con)
dbDisconnect(con,flights.db)
con <- dbConnect(RSQLite::SQLite(), dbname="flights2008.db")
dbDisconnect(con,flights2008.db)
con <- dbConnect(RSQLite::SQLite(), dbname="flights2008.db")
dbListTables(con)
flight2008<- dbReadTable(con, "flights")
dbWriteTable(con, "flights", flights)
library(RSQLite)
con <- dbConnect(RSQLite::SQLite(), dbname="flights2008.db")
dbListTables(con)
x<-dbListTables(con)
x
con <- dbConnect(RSQLite::SQLite(), dbname="flights2008")
x<-dbListTables(con)
x
filename <- "flights2008.db"
filename
sqlite.driver <- dbDriver("SQLite")
db <- dbConnect(sqlite.driver,
dbname = filename)
db
dbListTables(db)
f<- "C:\Users\soumi\Documents\Block3\DSCI_513\DSCI_513_lab1_sayanti\flights2008.db"
f<- "C:\\Users\\soumi\\Documents\\Block3\\DSCI_513\\DSCI_513_lab1_sayanti\\flights2008.db"
db <- dbConnect(sqlite.driver,
+                 dbname = f)
db <- dbConnect(sqlite.driver,
dbname = f)
db
dbListTables(db)
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(dplyr)
library(tidyr)
library(tidyverse)
con = dbConnect(SQLite(), "flightsdata.db")
dbListTables(con)
flight_data <- tbl(con, "flights")
#View(flight_data)
head(flight_data)
flight_data %>%
arrange(Origin)%>%
group_by(Origin)%>%
#filter(DepTime>0)%>%
tally() %>%
arrange(desc(n))
airports1<- flight_data%>%
group_by(Dest)%>%
filter(ArrDelay>30)
count_flight<-airports1 %>%
group_by(Dest)%>%
summarize(tot=n())%>%
filter(tot>2500)
(plot1 <- ggplot((data = count_flight))+
geom_point(aes(Dest,tot))+
ggtitle("Flights with Arrival Delay > 30 for airports")+
xlab("Aiports")+
ylab("Count of arrival delayed flights")+
theme_bw()+
theme(plot.title = element_text(hjust=0.5),axis.text.x = element_text(angle = 90, hjust = 1 )))
knitr::opts_chunk$set(echo = TRUE)
count_flight1<-flight_data %>%
group_by(Dest)%>%
filter(ArrDelay>30)
library(RSQLite)
library(dplyr)
library(tidyr)
library(tidyverse)
con = dbConnect(SQLite(), "flightsdata.db")
dbListTables(con)
flight_data <- tbl(con, "flights")
#View(flight_data)
head(flight_data)
flight_data %>%
arrange(Origin)%>%
group_by(Origin)%>%
#filter(DepTime>0)%>%
tally() %>%
arrange(desc(n))
count_flight1<-flight_data %>%
group_by(Dest)%>%
filter(ArrDelay>30)
summarize(tot=n())%>%
filter(tot>2500)
count_flight1<-flight_data %>%
group_by(Dest)%>%
filter(ArrDelay>30)%>%
summarize(tot=n())%>%
filter(tot>2500)
(plot1 <- ggplot((data = count_flight1))+
geom_point(aes(Dest,tot))+
ggtitle("Flights with Arrival Delay > 30 for airports")+
xlab("Aiports")+
ylab("Count of arrival delayed flights")+
theme_bw()+
theme(plot.title = element_text(hjust=0.5),axis.text.x = element_text(angle = 90, hjust = 1 )))
(flights_delay<- flight_data%>%
group_by(Dest)%>%
filter(ArrDelay>30))
(flights_delay<- flight_data%>%
group_by(Dest)%>%
filter(ArrDelay>30)%>%
select(FlightNum,TailNum))
library(RSQLite)
library(dplyr)
library(tidyr)
library(tidyverse)
con = dbConnect(SQLite(), "flightsdata.db")
dbListTables(con)
flight_data <- tbl(con, "flights")
flight_data %>%
arrange(Origin)%>%
group_by(Origin)%>%
tally() %>%
arrange(desc(n))
library(RSQLite)
library(dplyr)
library(tidyr)
library(tidyverse)
con = dbConnect(SQLite(), "flightsdata.db")
dbListTables(con)
flight_data <- tbl(con, "flights")
Bussiest_airports<- flight_data %>%
arrange(Origin)%>%
group_by(Origin)%>%
tally() %>%
arrange(desc(n))
#Reporting 10 bussiest airports :
(Bussiest_airports[1:10,])
(Bussiest_airports<- flight_data %>%
arrange(Origin)%>%
group_by(Origin)%>%
tally() %>%
arrange(desc(n))%>%
slice(1:10))
head(Bussiest_airports,10)
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
#library(kableExtra)
library(tidyverse)
library(plyr)
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
#library(kableExtra)
library(tidyverse)
library(plyr)
library(kable)
install.packages("car")
setwd("~/Block4/DSCI_532/GitHUB.com/Forked/Mental_Health_Issue_Tracker/data")
knitr::opts_chunk$set(echo = TRUE)
#sought_treatment_by_professional
#MHI_in_past
#MHI_currently
df %>%
ggplot(aes(x = options_for_seeking_help)) +
geom_bar(stat = "count", position = position_dodge()) +
facet_wrap(~MHI_currently)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(wordcloud2)
library(tidytext)
library(tidyverse)
#sought_treatment_by_professional
#MHI_in_past
#MHI_currently
df %>%
ggplot(aes(x = options_for_seeking_help)) +
geom_bar(stat = "count", position = position_dodge()) +
facet_wrap(~MHI_currently)
#sought_treatment_by_professional
#MHI_in_past
#MHI_currently
df %>%
ggplot(aes(x = options_for_seeking_help)) +
geom_bar(stat = "count", position = position_dodge()) +
facet_wrap(~ MHI_currently)
library(dplyr)
library(wordcloud2)
library(tidytext)
library(tidyverse)
df <- read.csv("mental-heath-in-tech_working_copy.csv")
#sought_treatment_by_professional
#MHI_in_past
#MHI_currently
df %>%
ggplot(aes(x = options_for_seeking_help)) +
geom_bar(stat = "count", position = position_dodge()) +
facet_wrap(~ MHI_currently)
df %>%
ggplot(aes(x = options_for_seeking_help)) +
geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help)) +
geom_bar(aes(MHI_currently),stat = "count", position = position_dodge()) +
geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help)) ++ scale_fill_brewer(palette = "Spectral")+
geom_bar(aes(MHI_currently),stat = "count", position = position_dodge()) +
geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help)) + scale_fill_brewer(palette = "Spectral")+
geom_bar(aes(MHI_currently),stat = "count", position = position_dodge()) +
geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help)) +
geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help)) +
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help)) +
geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help), fill =MHI_currently ) +
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help), fill =MHI_currently ) + geom_bar()
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help, fill =MHI_currently) ) + geom_bar()
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help, fill =MHI_currently) ) +
geom_bar(position="dodge")
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help, fill =c(MHI_currently,MHI_in_past) ) +
geom_bar(position="dodge")
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>%
ggplot(aes(x = options_for_seeking_help, fill =MHI_in_past) ) +
geom_bar(position="dodge")
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>% filter(MHI_in_past == 'Yes')%>%
ggplot(aes(x = options_for_seeking_help, fill =MHI_in_currently) ) +
geom_bar(position="dodge")
df %>% filter(MHI_in_past == 'Yes')%>%
ggplot(aes(x = options_for_seeking_help, fill =MHI_currently) ) +
geom_bar(position="dodge")
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
df %>% filter(MHI_in_past == 'No')%>%
ggplot(aes(x = options_for_seeking_help, fill =MHI_currently) ) +
geom_bar(position="dodge")
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
#sought_treatment_by_professional
#MHI_in_past
#MHI_currently
df %>%
ggplot(aes(x = options_for_seeking_help)) +
geom_bar(stat = "count", position = position_dodge()) +
facet_grid(~ MHI_currently)
#sought_treatment_by_professional
#MHI_in_past
#MHI_currently
df %>%
ggplot(aes(x = options_for_seeking_help,fill =MHI_in_past )) +
geom_bar(stat = "count", position = position_dodge()) +
facet_grid(~ MHI_currently)
#sought_treatment_by_professional
#MHI_in_past
#MHI_currently
df %>%
ggplot(aes(x = options_for_seeking_help,fill =MHI_currently )) +
geom_bar(stat = "count", position = position_dodge()) +
facet_grid(~ MHI_in_past)
ggplot(df, aes(options_for_seeking_help, fill = MHI_currently)) +
geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity')
ggplot(df, aes(options_for_seeking_help, fill = MHI_currently)) +
geom_histogram(alpha = 0.5, aes(y = ..count..), position = 'identity')
ggplot(df, aes(options_for_seeking_help, fill = MHI_currently)) +
geom_histogram(alpha = 0.5, stat = "count",aes(y = ..density..), position = 'identity')
ggplot(df, aes(options_for_seeking_help, fill = MHI_currently)) +
geom_histogram(alpha = 0.5, stat = "count",aes(y = MHI_in_past), position = 'identity')
ggplot(df, aes(options_for_seeking_help, fill = MHI_currently)) +
geom_bar(alpha = 0.5, stat = "count",aes(y = MHI_in_past), position = 'identity')
(df %>%
ggplot(aes(x = options_for_seeking_help, fill= "light blue")) +
geom_bar(stat = "count", position = position_dodge()) +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.4, colour = "blue") +
#ylim(0, 315) +
labs(x = "XXX",
y = "YYY") +
theme_bw() +
#ggtitle("Team_mem_view_negetively") +
theme(plot.title = element_text(hjust = 0.5)))
#wrk_interference_when_treated
#wrk_interference_No_treatement
ggplot(df) +
geom_histogram(data=subset(df,wrk_interference_when_treated),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(df,wrk_interference_No_treatement),fill = "blue", alpha = 0.2) +
library(dplyr)
library(wordcloud2)
library(tidytext)
library(tidyverse)
library(plotly)
df <- read.csv("mental-heath-in-tech_working_copy.csv")
#wrk_interference_when_treated
#wrk_interference_No_treatement
ggplot(df,aes(MHI_currently)) +
geom_histogram(data=subset(df,wrk_interference_when_treated),fill = "red", alpha = 0.2) +
geom_histogram(data=subset(df,wrk_interference_No_treatement),fill = "blue", alpha = 0.2)
#wrk_interference_when_treated
#wrk_interference_No_treatement
p1<-hist(df$wrk_interference_when_treated)
#wrk_interference_when_treated
#wrk_interference_No_treatement
(nw_df <- df %>%
select(wrk_interference_when_treated,wrk_interference_No_treatement)%>%
group_by(wrk_interference_when_treated))
#wrk_interference_when_treated
#wrk_interference_No_treatement
(nw_df <- df %>%
select(wrk_interference_when_treated,wrk_interference_No_treatement)%>%
group_by(wrk_interference_when_treated,wrk_interference_No_treatement))
#wrk_interference_when_treated
#wrk_interference_No_treatement
(nw_df <- df %>%
select(wrk_interference_when_treated,wrk_interference_No_treatement)%>%
mutate(sum=sum(wrk_interference_when_treated))
#wrk_interference_when_treated
#wrk_interference_No_treatement
(nw_df <- df %>%
select(wrk_interference_when_treated,wrk_interference_No_treatement)%>%
mutate(sum=sum(wrk_interference_when_treated))
)
#wrk_interference_when_treated
#wrk_interference_No_treatement
(nw_df <- df %>%
select(wrk_interference_when_treated,wrk_interference_No_treatement)%>%
group_by(wrk_interference_when_treated)%>%
tally(n)
)
#wrk_interference_when_treated
#wrk_interference_No_treatement
(nw_df <- df %>%
group_by(wrk_interference_when_treated,wrk_interference_No_treatement)
)
#wrk_interference_when_treated
#wrk_interference_No_treatement
(nw_df <- df %>%
group_by(wrk_interference_when_treated,wrk_interference_No_treatement)%>%
tally(n)
)
#wrk_interference_when_treated
#wrk_interference_No_treatement
(nw_df <- df %>%
group_by(wrk_interference_when_treated)%>%
tally(n)
)
#wrk_interference_when_treated
#wrk_interference_No_treatement
(nw_df <- df %>%
group_by(wrk_interference_when_treated)
)
#wrk_interference_when_treated
#wrk_interference_No_treatement
df %>% filter(MHI_in_past == 'No')%>%
ggplot(aes(x = wrk_interference_when_treated, fill =MHI_currently) ) +
geom_bar(position="dodge")
#wrk_interference_when_treated
#wrk_interference_No_treatement
df %>% filter(MHI_in_past == 'Yes')%>%
ggplot(aes(x = wrk_interference_when_treated, fill =MHI_currently) ) +
geom_bar(position="dodge")
#wrk_interference_when_treated
#wrk_interference_No_treatement
df %>% filter(MHI_in_past == 'Yes')%>%
ggplot(aes(x = wrk_interference_No_treatement, fill =MHI_currently) ) +
geom_bar(position="dodge")
p <- plot_ly(alpha = 0.6) %>%
add_histogram(x = ~rnorm(500)) %>%
add_histogram(x = ~rnorm(500) + 1) %>%
layout(barmode = "overlay")
(p <- plot_ly(alpha = 0.6) %>%
add_histogram(x = ~rnorm(500)) %>%
add_histogram(x = ~rnorm(500) + 1) %>%
layout(barmode = "overlay")
)
(p <- plot_ly(alpha = 0.6) %>%
add_histogram(x = ~rnorm(500)) %>%
add_histogram(x = ~rnorm(500) + 1) %>%
layout(barmode = "overlay")
)
data_2016<-df
data_2016$wrk_interference_when_treated <-as.numeric(as.factor(data_2016$wrk_interference_when_treated))
data_2016$wrk_interference_No_treatement<-as.numeric(as.factor(data_2016$wrk_interference_No_treatement))
data_2016<-df
data_2016$wrk_interference_when_treated <-as.numeric(as.factor(data_2016$wrk_interference_when_treated))
data_2016$wrk_interference_No_treatement<-as.numeric(as.factor(data_2016$wrk_interference_No_treatement))
(p <- plot_ly(alpha = 0.6) %>%
add_histogram(x = data_2016$wrk_interference_when_treated) %>%
add_histogram(x = data_2016$wrk_interference_No_treatement) %>%
layout(barmode = "overlay")
)
p1 <- plot_ly(df, x = ~wrk_interference_when_treated) %>% add_histogram()
p2 <- df %>%
dplyr::count(wrk_interference_No_treatement) %>%
plot_ly(x = ~wrk_interference_No_treatement, y = ~n) %>%
add_bars()
subplot(p1, p2) %>% hide_legend()
p1 <- plot_ly(df, x = ~wrk_interference_when_treated) %>% add_histogram()
p2 <- df %>%
dplyr::count(wrk_interference_No_treatement) %>%
plot_ly(x = ~wrk_interference_No_treatement, y = ~n) %>%
add_bars()
subplot(p1, p2)
p1 <- plot_ly(df, x = ~wrk_interference_when_treated) %>% add_histogram()
p2 <- df %>%
dplyr::count(wrk_interference_No_treatement) %>%
plot_ly(x = ~wrk_interference_No_treatement, y = ~n) %>%
add_bars()
subplot(p1, p2) %>% hide_legend()
df %>% filter(MHI_in_past == 'No')%>%
ggplot(aes(x = options_for_seeking_help, fill =MHI_currently) ) +
geom_bar(position="dodge")
#geom_bar(aes(MHI_currently),stat = "count", position = position_dodge())
#geom_bar(aes(MHI_in_past),stat = "count", position = position_dodge())
(df_1 <- read.csv("data/mental-heath-in-tech-2016_EDA.csv"))
(df_1 <- read.csv("mental-heath-in-tech-2016_EDA.csv"))
(df_1 <- read.csv("mental-heath-in-tech_working_copy.csv"))
# Plot a `worldcloud` of the most common health issues reported by the interviewees.
main_conditions <- df_1 %>%
select(Condition) %>%
mutate(Condition = as.character(Condition)) %>%
mutate(Condition = tolower(Condition)) %>%
mutate(Condition = gsub("\\s*\\([^\\)]+\\)", "", Condition)) %>%
mutate(Condition = gsub("\\s+-.*", "", Condition)) %>%
mutate(Condition = strsplit(Condition, "|", fixed = TRUE)) %>%
unnest(Condition) %>%
count(Condition) %>%
setNames(c("word", "freq")) %>%
mutate(freq = log(freq)) %>%
arrange(desc(freq))
View(main_conditions)
(main_conditions %>%
wordcloud2(size = 0.5, minRotation = 0, maxRotation = 0, shape = "rectangle"))
(df_1 <- read.csv("mental-heath-in-tech_working_copy.csv"))
# Plot a `worldcloud` of the most common health issues reported by the interviewees.
main_conditions <- df_1 %>%
select(Condition) %>%
mutate(Condition = as.character(Condition)) %>%
mutate(Condition = tolower(Condition)) %>%
mutate(Condition = gsub("\\s*\\([^\\)]+\\)", "", Condition)) %>%
mutate(Condition = gsub("\\s+-.*", "", Condition)) %>%
mutate(Condition = strsplit(Condition, "|", fixed = TRUE)) %>%
unnest(Condition) %>%
count(Condition) %>%
setNames(c("word", "freq")) %>%
mutate(freq = log(freq)) %>%
arrange(desc(freq))
#View(main_conditions)
(main_conditions %>%
wordcloud2(size = 0.5, minRotation = 0, maxRotation = 0, shape = "rectangle"))
(df_1 <- read.csv("mental-heath-in-tech_working_copy.csv"))
# Plot a `worldcloud` of the most common health issues reported by the interviewees.
main_conditions <- df_1 %>%
select(Condition) %>%
mutate(Condition = as.character(Condition)) %>%
mutate(Condition = tolower(Condition)) %>%
mutate(Condition = gsub("\\s*\\([^\\)]+\\)", "", Condition)) %>%
mutate(Condition = gsub("\\s+-.*", "", Condition)) %>%
mutate(Condition = strsplit(Condition, "|", fixed = TRUE)) %>%
unnest(Condition) %>%
count(Condition) %>%
setNames(c("word", "freq")) %>%
mutate(freq = log(freq)) %>%
arrange(desc(freq))
#View(main_conditions)
(main_conditions %>%
wordcloud2(size = 0.5, minRotation = 0, maxRotation = 0, shape = "square"))
(df_1 <- read.csv("mental-heath-in-tech_working_copy.csv"))
# Plot a `worldcloud` of the most common health issues reported by the interviewees.
main_conditions <- df_1 %>%
select(Condition) %>%
mutate(Condition = as.character(Condition)) %>%
mutate(Condition = tolower(Condition)) %>%
mutate(Condition = gsub("\\s*\\([^\\)]+\\)", "", Condition)) %>%
mutate(Condition = gsub("\\s+-.*", "", Condition)) %>%
mutate(Condition = strsplit(Condition, "|", fixed = TRUE)) %>%
unnest(Condition) %>%
count(Condition) %>%
setNames(c("word", "freq")) %>%
mutate(freq = log(freq)) %>%
arrange(desc(freq))
#View(main_conditions)
(main_conditions %>%
wordcloud2(size = 0.5, minRotation = 0, maxRotation = 0, shape = "circle"))
